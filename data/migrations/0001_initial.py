# Generated by Django 3.2.10 on 2021-12-21 01:15

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Assembly',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('herb_id', models.CharField(max_length=50, verbose_name='药物编码')),
                ('tissue_id', models.CharField(max_length=50, verbose_name='样本组织编码')),
                ('gene_id', models.CharField(max_length=50, verbose_name='基因ID')),
                ('gene_length', models.CharField(max_length=50, verbose_name='基因长度')),
                ('gene_seq', models.TextField(verbose_name='基因序列')),
            ],
        ),
        migrations.CreateModel(
            name='Cog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gene', models.CharField(max_length=50, verbose_name='基因名称')),
                ('cog_id', models.CharField(max_length=50, verbose_name='COG ID')),
                ('cog_evalue', models.FloatField(verbose_name='COG e值')),
                ('cog_description', models.TextField(verbose_name='COG说明')),
            ],
        ),
        migrations.CreateModel(
            name='Cpc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gene', models.CharField(max_length=50, verbose_name='基因名称')),
                ('transcript_length', models.SmallIntegerField(verbose_name='转录本长度')),
                ('peptide_length', models.SmallIntegerField(verbose_name='肽段长度')),
                ('fickett_score', models.FloatField(verbose_name='fickett值')),
                ('pi', models.FloatField(verbose_name='pi值')),
                ('orf_integrity', models.FloatField(verbose_name='orf完整度')),
                ('coding_probability', models.FloatField(verbose_name='编码可能性')),
                ('label', models.CharField(max_length=50, verbose_name='标签')),
            ],
        ),
        migrations.CreateModel(
            name='Go',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gene', models.CharField(max_length=50, verbose_name='基因名称')),
                ('go_id', models.CharField(max_length=50, verbose_name='GO ID')),
                ('go_definition', models.CharField(max_length=250, verbose_name='GO描述')),
                ('go_ontology', models.CharField(max_length=50, verbose_name='GO 本体')),
                ('go_term', models.CharField(max_length=50, verbose_name='GO 术语')),
            ],
        ),
        migrations.CreateModel(
            name='Kegg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gene', models.CharField(max_length=50, verbose_name='基因名称')),
                ('kegg_id', models.CharField(max_length=50, verbose_name='KEGG ID')),
                ('kegg_evalue', models.FloatField(verbose_name='KEGG e值')),
                ('kegg_description', models.TextField(verbose_name='KEGG说明')),
            ],
        ),
        migrations.CreateModel(
            name='Kog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gene', models.CharField(max_length=50, verbose_name='基因名称')),
                ('kog_evalue', models.FloatField(verbose_name='KOG e值')),
                ('kog_id', models.CharField(max_length=50, verbose_name='KOG ID')),
                ('kog_description', models.TextField(verbose_name='KOG说明')),
            ],
        ),
        migrations.CreateModel(
            name='Nr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gene', models.CharField(max_length=50, verbose_name='基因名称')),
                ('nr_id', models.CharField(max_length=50, verbose_name='NR ID')),
                ('nr_evalue', models.FloatField(verbose_name='NR e值')),
                ('nr_description', models.TextField(verbose_name='NR说明')),
            ],
        ),
        migrations.CreateModel(
            name='Pfam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gene', models.CharField(max_length=50, verbose_name='基因名称')),
                ('pfam_id', models.CharField(max_length=50, verbose_name='Pfam ID')),
                ('pfam_evalue', models.FloatField(verbose_name='Pfam e值')),
                ('pfam_description', models.TextField(verbose_name='Pfam说明')),
            ],
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('herb_id', models.CharField(max_length=50, verbose_name='药物编码')),
                ('herb_name', models.CharField(max_length=50, verbose_name='药物名称')),
                ('herb_name_note', models.CharField(max_length=50, verbose_name='药物名称注释')),
                ('tissue_id', models.CharField(max_length=50, verbose_name='组织编号')),
                ('seq_id', models.CharField(max_length=50, verbose_name='测序编号')),
                ('collection_tissue', models.CharField(max_length=50, verbose_name='采样组织')),
                ('collection_tissue_detail', models.CharField(max_length=50, verbose_name='采样组织细节')),
                ('collection_location', models.CharField(max_length=50, verbose_name='采样地点')),
                ('collection_datetime', models.DateField(verbose_name='采样时间')),
                ('collector', models.CharField(max_length=50, verbose_name='采样人')),
                ('lattitude', models.FloatField(verbose_name='维度')),
                ('longitude', models.FloatField(verbose_name='经度')),
                ('elevation', models.FloatField(verbose_name='海拔')),
                ('sample_pic_name', models.CharField(max_length=50, verbose_name='样本照片名称')),
                ('field_store_condition', models.CharField(max_length=50, verbose_name='野外保存条件')),
                ('field_store_duration', models.CharField(max_length=50, verbose_name='野外保存时间')),
                ('temporary_store_condition', models.CharField(max_length=50, verbose_name='临时保存条件')),
                ('transport_datetime', models.DateField(verbose_name='运输日期')),
                ('transport_store_condition', models.CharField(max_length=50, verbose_name='运输保存条件')),
                ('receiver', models.CharField(max_length=50, verbose_name='样本接收人')),
                ('receive_datetime', models.DateField(verbose_name='样本接收时间')),
                ('sample_count', models.IntegerField(verbose_name='样本数量')),
                ('sample_total_weight', models.FloatField(verbose_name='样本重量')),
                ('sample_notes', models.TextField(verbose_name='样本说明')),
                ('sample_batch_notes', models.TextField(verbose_name='样本批次说明')),
                ('sequencing_sample_id', models.CharField(max_length=50, verbose_name='测序样本ID')),
                ('sequencing_length_type', models.CharField(max_length=50, verbose_name='测序长度类型')),
                ('barcode_id', models.CharField(max_length=50, verbose_name='条形码ID')),
                ('chip_id', models.CharField(max_length=50, verbose_name='芯片ID')),
                ('lane_id', models.CharField(max_length=50, verbose_name='Lane ID')),
                ('sequencing_platform', models.CharField(max_length=50, verbose_name='测序平台')),
                ('fq1_path', models.CharField(max_length=250, verbose_name='fq1文件路径')),
                ('fq2_path', models.CharField(max_length=250, verbose_name='fq2文件路径')),
            ],
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('herb_id', models.SmallIntegerField(verbose_name='药物编码')),
                ('herb_name', models.CharField(max_length=50, verbose_name='药物名称')),
                ('herb_pinyin', models.CharField(max_length=50, verbose_name='药物拼音')),
                ('seq_or_not', models.BooleanField(verbose_name='是否测序')),
                ('daodi_or_not', models.BooleanField(verbose_name='是否道地药材')),
                ('plant_name', models.CharField(max_length=50, verbose_name='植物名称')),
                ('palnt_class', models.CharField(max_length=50, verbose_name='分类纲')),
                ('plant_order', models.CharField(max_length=50, verbose_name='分类目')),
                ('plant_family', models.CharField(max_length=50, verbose_name='分类科')),
                ('plant_genus', models.CharField(max_length=50, verbose_name='分类属')),
                ('plant_species', models.CharField(max_length=50, verbose_name='分类种')),
                ('species_suffix', models.CharField(max_length=50, verbose_name='种后缀')),
                ('tissue', models.CharField(max_length=50, verbose_name='用药组织')),
                ('origin', models.CharField(max_length=50, verbose_name='地源')),
                ('herb_pic', models.CharField(max_length=150, verbose_name='药物图片名称')),
                ('plant_pic', models.CharField(max_length=150, verbose_name='植物图片名称')),
                ('taste', models.CharField(max_length=50, verbose_name='药-味')),
                ('nature', models.CharField(max_length=50, verbose_name='药-性')),
                ('toxin', models.CharField(max_length=50, verbose_name='药-毒')),
                ('guijing', models.CharField(max_length=50, verbose_name='药-归经')),
                ('gongneng', models.CharField(max_length=250, verbose_name='药-功能')),
            ],
        ),
        migrations.CreateModel(
            name='Ssr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gene', models.CharField(max_length=50, verbose_name='基因名称')),
                ('ssr_nr', models.SmallIntegerField(verbose_name='SSR编号')),
                ('ssr_type', models.CharField(max_length=50, verbose_name='SSR类型')),
                ('ssr_size', models.SmallIntegerField(verbose_name='SSR大小')),
                ('ssr_start', models.PositiveIntegerField(verbose_name='SSR起点')),
                ('ssr_end', models.PositiveIntegerField(verbose_name='SSR终点')),
            ],
        ),
        migrations.CreateModel(
            name='Swissprot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gene', models.CharField(max_length=50, verbose_name='基因名称')),
                ('swissprot_evalue', models.FloatField(verbose_name='SwissProt e值')),
                ('swissprot_id', models.CharField(max_length=50, verbose_name='SwissProt ID')),
                ('swissprot_description', models.TextField(verbose_name='SwissProt说明')),
            ],
        ),
    ]
